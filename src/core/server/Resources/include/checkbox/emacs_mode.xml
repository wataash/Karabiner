<?xml version="1.0"?>
<root>
  <item>
    <name>Emacs Mode (effective only with left control and right option)</name>
    <item>
      <name>Note:</name>
      <appendix>Emacs Mode will be disabled in the following apps.</appendix>
      <appendix></appendix>
      <appendix>* Emacs</appendix>
      <appendix>* Remote Desktop</appendix>
      <appendix>* Terminal</appendix>
      <appendix>* Vi</appendix>
      <appendix>* X11</appendix>
      <appendix></appendix>
      <appendix>If you want to change these ignored apps, please modify EMACS_MODE_IGNORE_APPS</appendix>
      <appendix>in private.xml.</appendix>
      <appendix>(See "Expand prepared settings's capabilities" section in private.xml Reference Manual.)</appendix>
    </item>
    <item>
      <name>Control+D to Forward Delete</name>
      <identifier>option.emacsmode_controlD</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Control+D to Forward Delete (when no other modifiers are pressed)</name>
      <identifier>option.emacsmode_controlD_nomodifiers</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Control+H to Delete</name>
      <identifier>option.emacsmode_controlH</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Control+I to Tab</name>
      <identifier>option.emacsmode_controlI</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Control+I to Tab (when no other modifiers are pressed or shift key is pressed)</name>
      <identifier>option.emacsmode_controlI_nomodifiers</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Control+[ to Escape</name>
      <identifier>option.emacsmode_controlLeftbracket</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::CONTROL_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Control+J to Return</name>
      <identifier>remap.controlJ2return</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Control+J to Return (when no other modifiers are pressed)</name>
      <identifier>remap.controlJ2return_nomodifiers</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Control+J to Enter</name>
      <identifier>remap.controlJ2enter</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::ENTER</autogen>
    </item>
    <item>
      <name>Control+M to Return</name>
      <identifier>option.emacsmode_controlM</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Control+M to Return (when no other modifiers are pressed)</name>
      <identifier>option.emacsmode_controlM_nomodifiers</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
    </item>
    <item>
      <name>Control+PNBF to Up/Down/Left/Right</name>
      <identifier>option.emacsmode_controlPNBF</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <include path="snippets/emacsmode_controlPNBF.xml" />
    </item>
    <item>
      <name>Control+PNBF to Up/Down/Left/Right</name>
      <appendix>(when there are no other modifiers)</appendix>
      <identifier>option.emacsmode_controlPNBF_nomodifiers</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <include path="snippets/emacsmode_controlPNBF.xml" />
    </item>
    <item>
      <name>Control+PNBF to Up/Down/Left/Right</name>
      <appendix>(+ Control+AE to Command+Left/Right)</appendix>
      <appendix>(+ Command+Control+PNBF to Shift+Up/Down/Left/Right)</appendix>
      <appendix>(+ Command+Control+AE to Shift+Command+Left/Right)</appendix>
      <appendix>(+ retain Control+Shift+PNBF)</appendix>
      <appendix>(+ retain Control+Shift+AE)</appendix>
      <identifier>option.emacsmode_controlPNBF_ex</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <include path="snippets/emacsmode_controlPNBF_ex.xml" />
    </item>
    <item>
      <name>Control+V to PageDown</name>
      <identifier>option.emacsmode_controlV</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::CONTROL_L, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Option+V to PageUp</name>
      <identifier>option.emacsmode_optionV</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::V, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>Command+V to PageUp</name>
      <identifier>option.emacsmode_commandV</identifier>
      <modifier_not>
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <!-- Do not use "not filter" on changing Command+XXX -->
      <autogen>__KeyToKey__ KeyCode::V, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>Control+Y to Command+V</name>
      <identifier>option.emacsmode_controlY</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::Y, ModifierFlag::CONTROL_L,
        KeyCode::V, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>Control+AE to Command+Left/Right</name>
      <identifier>option.emacsmode_controlAE</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>

      <block>
        <only>EXCEL</only>
        <!-- In editing cell, we should send home/end. -->
        <!-- But in search field, we should send command-left, right. -->
        <!-- So, we send home/end if control-a,control-e twice. -->

        <block>
          <lastpressedphysicalkey_only>KeyCode::A</lastpressedphysicalkey_only>
          <lastreleasedphysicalkey_only>KeyCode::A</lastreleasedphysicalkey_only>
          <autogen>
            __KeyToKey__
            KeyCode::A, ModifierFlag::CONTROL_L,
            KeyCode::HOME,
          </autogen>
        </block>
        <block>
          <lastpressedphysicalkey_only>KeyCode::E</lastpressedphysicalkey_only>
          <lastreleasedphysicalkey_only>KeyCode::E</lastreleasedphysicalkey_only>
          <autogen>
            __KeyToKey__
            KeyCode::E, ModifierFlag::CONTROL_L,
            KeyCode::END,
          </autogen>
        </block>
      </block>

      <autogen>
        __KeyToKey__
        KeyCode::A, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::E, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>Control+AE to Command+Shift+Left/Right,Left/Right</name>
      <appendix>(An Alternative way if you use Command+Left/Right for Spaces)</appendix>
      <identifier>option.emacsmode_controlAE_alternative</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::A, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::E, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
      </autogen>
    </item>
    <item>
      <name>Control+K to Command+Shift+Right,Forward Delete</name>
      <identifier>option.emacsmode_controlK_ex</identifier>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <block>
        <not>{{EMACS_MODE_IGNORE_APPS}}, DICTIONARY</not>
        <autogen>
          __KeyToKey__
          KeyCode::K, ModifierFlag::CONTROL_L,

          KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
          KeyCode::FORWARD_DELETE,
        </autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>
          __KeyToKey__
          KeyCode::K, ModifierFlag::CONTROL_L,

          KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
          KeyCode::FORWARD_DELETE,
        </autogen>
      </block>
    </item>
    <item>
      <name>Control+K to Command+Shift+Right,Command+X</name>
      <identifier>option.emacsmode_controlK</identifier>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <block>
        <not>{{EMACS_MODE_IGNORE_APPS}}, DICTIONARY</not>
        <autogen>
          __KeyToKey__
          KeyCode::K, ModifierFlag::CONTROL_L,

          KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
          KeyCode::X, ModifierFlag::COMMAND_L,
        </autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>
          __KeyToKey__
          KeyCode::K, ModifierFlag::CONTROL_L,
          KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
          KeyCode::X, ModifierFlag::COMMAND_L,
        </autogen>
      </block>
    </item>
    <item>
      <name>Control+W to Command+X</name>
      <identifier>option.emacsmode_controlW</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::W, ModifierFlag::CONTROL_L,
        KeyCode::X, ModifierFlag::COMMAND_L
      </autogen>
    </item>
    <item>
      <name>Option+W to Command+C</name>
      <identifier>option.emacsmode_OptionWCopy</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
        KeyCode::C, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>Option+BF to Option+Left/Right</name>
      <identifier>option.emacsmode_optionBF</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
      </modifier_not>

      <block>
        <inputsource_only>DVORAK</inputsource_only>
        <autogen>
          __KeyToKey__
          KeyCode::N, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
          KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L,
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::Y, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
          KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
        </autogen>
      </block>
      <block>
        <inputsource_not>DVORAK</inputsource_not>
        <autogen>
          __KeyToKey__
          KeyCode::B, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
          KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L,
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::F, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
          KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
        </autogen>
      </block>
    </item>
    <item>
      <name>Option+D to Option+Forward Delete</name>
      <identifier>option.emacsmode_optionD</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::D, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
        KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_L,
      </autogen>
    </item>
    <item>
      <name>Option+&lt; to Home / Option+&gt; to End</name>
      <identifier>option.emacsmode_optionLtGt</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::COMMA, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
        KeyCode::HOME, ModifierFlag::OPTION_L,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::DOT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
        KeyCode::END, ModifierFlag::OPTION_L
      </autogen>
    </item>
    <item>
      <name>Control+/ to Command+Z</name>
      <identifier>option.emacsmode_controlSlash</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::SLASH, ModifierFlag::CONTROL_L,
        KeyCode::Z, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>Control+_ to Command+Z</name>
      <identifier>option.emacsmode_controlUnderscore</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::MINUS, ModifierFlag::CONTROL_L | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
        KeyCode::Z, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>Control+S to Command+F</name>
      <identifier>option.emacsmode_controlS</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::S, ModifierFlag::CONTROL_L,
        KeyCode::F, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>[ex] Control+1 to Home / Control+2 to End</name>
      <identifier>option.emacsmode_ex_control12</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::CONTROL_L, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::CONTROL_L, KeyCode::END</autogen>
    </item>
    <item>
      <name>[ex] Control+Comma(,)/Dot(.) to Home/End</name>
      <identifier>option.emacsmode_ex_controlcommadot</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::CONTROL_L, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT,   ModifierFlag::CONTROL_L, KeyCode::END</autogen>
    </item>
    <item>
      <name>[ex] Control+Q to PageUp</name>
      <identifier>option.emacsmode_ex_controlQ</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>[ex] Control+W to Option+Delete</name>
      <identifier>option.emacsmode_ex_controlW</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::W, ModifierFlag::CONTROL_L,
        KeyCode::DELETE, ModifierFlag::OPTION_L,
      </autogen>
    </item>
    <item>
      <name>[ex] Control+U to Command+Shift+Left,Command+X</name>
      <identifier>option.emacsmode_ex_controlU</identifier>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <block>
        <only>EXCEL</only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::HOME, ModifierFlag::SHIFT_L,
          KeyCode::X, ModifierFlag::COMMAND_L,
          Option::NOREPEAT
        </autogen>
      </block>
      <block>
        <only>Dock</only>
        <windowname_only>Launchpad</windowname_only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
          KeyCode::X, ModifierFlag::COMMAND_L,
          Option::NOREPEAT
        </autogen>
      </block>
      <block>
        <not>{{EMACS_MODE_IGNORE_APPS}}, DICTIONARY</not>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
          KeyCode::X, ModifierFlag::COMMAND_L,
          Option::NOREPEAT,
        </autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
          KeyCode::X, ModifierFlag::COMMAND_L,
          Option::NOREPEAT,
        </autogen>
      </block>
    </item>
    <item>
      <name>[ex] Control+U to Command+Shift+Left,Delete</name>
      <identifier>option.emacsmode_ex_controlU_delete</identifier>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <block>
        <only>EXCEL</only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::HOME, ModifierFlag::SHIFT_L,
          KeyCode::DELETE,
          Option::NOREPEAT
        </autogen>
      </block>
      <block>
        <only>Dock</only>
        <windowname_only>Launchpad</windowname_only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
          KeyCode::DELETE,
          Option::NOREPEAT
        </autogen>
      </block>
      <block>
        <not>{{EMACS_MODE_IGNORE_APPS}}, DICTIONARY</not>
        <autogen>
          __KeyToKey__ KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
          KeyCode::DELETE,
          Option::NOREPEAT,
        </autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
          KeyCode::DELETE,
          Option::NOREPEAT,
        </autogen>
      </block>
    </item>
    <item>
      <name>[ex] Control+U to Command+Shift+Left,Forward Delete</name>
      <identifier>option.emacsmode_ex_controlU_forwarddelete</identifier>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <block>
        <only>EXCEL</only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::HOME, ModifierFlag::SHIFT_L,
          KeyCode::FORWARD_DELETE,
          Option::NOREPEAT,
        </autogen>
      </block>
      <block>
        <only>Dock</only>
        <windowname_only>Launchpad</windowname_only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
          KeyCode::FORWARD_DELETE,
          Option::NOREPEAT,
        </autogen>
      </block>
      <block>
        <not>{{EMACS_MODE_IGNORE_APPS}}, DICTIONARY</not>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
          KeyCode::FORWARD_DELETE,
          Option::NOREPEAT,
        </autogen>
      </block>
      <block>
        <only>DICTIONARY</only>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::CONTROL_L,
          KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
          KeyCode::FORWARD_DELETE,
          Option::NOREPEAT,
        </autogen>
      </block>
    </item>
    <item>
      <name>[ex] Control+U to PageUp</name>
      <identifier>remap.controlU2pageup</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
    </item>
    <item>
      <name>[ex] Control+G to Escape</name>
      <identifier>option.emacsmode_ex_controlG</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_L, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>[ex] Control+AE to Home/End</name>
      <identifier>option.emacsmode_ex_controlAE</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_L, KeyCode::END</autogen>
    </item>
    <item>
      <name>[ex] Command+W to Command+C</name>
      <identifier>option.emacsmode_ex_commandW</identifier>
      <modifier_not>
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <!-- Do not use "not filter" on changing Command+XXX -->
      <autogen>
        __KeyToKey__
        KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        KeyCode::C, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
      </autogen>
    </item>
    <item>
      <name>[ex] Command+W to Control+X,Control+M,Command+C (only in Xcode)</name>
      <appendix>(+ Command+W to Command+C (except Xcode))</appendix>
      <identifier>option.emacsmode_ex_commandW_xcode</identifier>
      <modifier_not>
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <block>
        <only>XCODE</only>
        <autogen>
          __KeyToKey__
          KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
          KeyCode::X, ModifierFlag::CONTROL_L,
          KeyCode::M, ModifierFlag::CONTROL_L,
          KeyCode::C, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        </autogen>
      </block>
      <block>
        <!-- Do not use "not filter" on changing Command+XXX -->
        <autogen>
          __KeyToKey__
          KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
          KeyCode::C, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        </autogen>
      </block>
    </item>
    <item>
      <name>[ex] Control+W to Control+X,Control+M,Command+X (only in Xcode)</name>
      <appendix>(+ Control+W to Command+X (except Xcode))</appendix>
      <identifier>option.emacsmode_ex_controlW_xcode</identifier>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::OPTION_L,  ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <block>
        <only>XCODE</only>
        <autogen>
          __KeyToKey__
          KeyCode::W, ModifierFlag::CONTROL_L,
          KeyCode::X, ModifierFlag::CONTROL_L,
          KeyCode::M, ModifierFlag::CONTROL_L,
          KeyCode::X, ModifierFlag::COMMAND_L,
        </autogen>
      </block>
      <block>
        <not>{{EMACS_MODE_IGNORE_APPS}}</not>
        <autogen>
          __KeyToKey__
          KeyCode::W, ModifierFlag::CONTROL_L,
          KeyCode::X, ModifierFlag::COMMAND_L,
        </autogen>
      </block>
    </item>
    <item>
      <name>[ex] Option+W to Command+W</name>
      <identifier>option.emacsmode_ex_optionW</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
        KeyCode::W, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>[ex] Option+E to Command+W</name>
      <identifier>option.emacsmode_ex_optionE</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::E, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
        KeyCode::W, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>[ex] Option+T to Command+T</name>
      <identifier>option.emacsmode_ex_optionT</identifier>
      <not>{{EMACS_MODE_IGNORE_APPS}}</not>
      <modifier_not>
        ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R,
        ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
        ModifierFlag::SHIFT_L,   ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __KeyToKey__
        KeyCode::T, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
        KeyCode::T, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>[ex] Use Control+X as prefix key</name>
      <item>
        <!-- C-x Mode Core -->
        <name>Control+X detail</name>
        <appendix>C-x C-s to Save (Command+S)</appendix>
        <appendix>C-x C-f to Open (Command+O)</appendix>
        <appendix>C-x u to Undo (Command+Z)</appendix>
        <appendix>C-x k to Close (Command+W)</appendix>
        <appendix>C-x C-c to Quit (Command+Q)</appendix>
        <appendix>C-x C-x to passthrough</appendix>
        <appendix>C-x C-g to turn off Control+X Mode</appendix>
        <identifier vk_config="true">notsave.emacsmode_ex_controlX_core</identifier>
        {{ EMACS_MODE_C_X_EXTRA }}
        <autogen>__ShowStatusMessage__ C-x Mode</autogen>
        <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::S, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::O, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::NONE,
          KeyCode::Z, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core,
        </autogen>
        <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::NONE,              KeyCode::W, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
        <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_L | ModifierFlag::NONE,                                      KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
      </item>
      <item>
        <name>Enable Control+X</name>
        <identifier>option.emacsmode_ex_controlX</identifier>
        <not>{{EMACS_MODE_IGNORE_APPS}}</not>
        <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_ON_notsave_emacsmode_ex_controlX_core</autogen>
      </item>
    </item>
    <item>
      <name>[ex] Use Control+Space as MarkSet</name>
      <item>
        <!-- MarkSet Mode Core -->
        <name>MarkSet Mode detail</name>
        <appendix>Control+W to Command_L+X</appendix>
        <appendix>Option+W to Command_L+C</appendix>
        <appendix>Control+G to turn off MarkSet</appendix>
        <appendix>Control+Space to turn off MarkSet</appendix>
        <identifier vk_config="true">notsave.emacsmode_ex_controlSpace_core</identifier>
        <autogen>__ShowStatusMessage__ MarkSet</autogen>
        {{ EMACS_MODE_MARKSET_EXTRA }}
        <autogen>
          __KeyToKey__
          KeyCode::W, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,
          KeyCode::X, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core,
          Option::NOREPEAT,
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION  | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,
          KeyCode::C, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core,
          Option::NOREPEAT,
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::G, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core,
          Option::NOREPEAT,
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::SPACE, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core,
          Option::NOREPEAT,
        </autogen>
      </item>
      <item>
        <name>Enable Control+Space</name>
        <identifier>option.emacsmode_ex_controlSpace</identifier>
        <not>{{EMACS_MODE_IGNORE_APPS}}</not>
        <autogen>
          __KeyToKey__
          KeyCode::SPACE, ModifierFlag::CONTROL_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_ON,
          KeyCode::VK_CONFIG_FORCE_ON_notsave_emacsmode_ex_controlSpace_core
        </autogen>
      </item>
    </item>
    <item>
      <name>Behavior in Emacs, Terminal, X11, VMware, Parallels, RDC</name>
      <item>
        <name>Force change C-d to Forward Delete</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlD_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlD_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlD_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-h to Delete</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlH_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlH_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlH_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-i to Tab</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlI_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlI_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlI_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::TAB</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-m to Return</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlM_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlM_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlM_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-[ to Escape</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlLeftbracket_term</identifier>
          <only>EMACS, TERMINAL</only>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::CONTROL_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlLeftbracket_x11</identifier>
          <only>X11</only>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::CONTROL_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlLeftbracket_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::CONTROL_L, KeyCode::ESCAPE</autogen>
        </item>
      </item>
      <item>
        <name>Force change C-pnbf to Up/Down/Left/Right</name>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlPNBF_term</identifier>
          <only>EMACS, TERMINAL</only>
          <include path="snippets/emacsmode_controlPNBF.xml" />
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlPNBF_x11</identifier>
          <only>X11</only>
          <include path="snippets/emacsmode_controlPNBF.xml" />
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlPNBF_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <include path="snippets/emacsmode_controlPNBF.xml" />
        </item>
      </item>
      <item>
        <name>Force change C-pnbf to Up/Down/Left/Right</name>
        <appendix>(+ Control+AE to Command+Left/Right)</appendix>
        <appendix>(+ Command+Control+PNBF to Shift+Up/Down/Left/Right)</appendix>
        <appendix>(+ Command+Control+AE to Shift+Command+Left/Right)</appendix>
        <appendix>(+ retain Control+Shift+PNBF)</appendix>
        <appendix>(+ retain Control+Shift+AE)</appendix>
        <item>
          <name>In Emacs, Terminal</name>
          <identifier>option.emacsmode_force_controlPNBF_ex_term</identifier>
          <only>EMACS, TERMINAL</only>
          <include path="snippets/emacsmode_controlPNBF_ex.xml" />
        </item>
        <item>
          <name>In X11</name>
          <identifier>option.emacsmode_force_controlPNBF_ex_x11</identifier>
          <only>X11</only>
          <include path="snippets/emacsmode_controlPNBF_ex.xml" />
        </item>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_force_controlPNBF_ex_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <include path="snippets/emacsmode_controlPNBF_ex.xml" />
        </item>
      </item>
      <item>
        <name>Control+AE to Home/End</name>
        <item>
          <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
          <identifier>option.emacsmode_controlAE_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::HOME</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::CONTROL_L, KeyCode::END</autogen>
        </item>
      </item>
      <item>
        <name>[Terminal] Control+/ to C-_ and Control+' to C-M-_</name>
        <identifier>option.emacsmode_controlSlashTerminal</identifier>
        <only>TERMINAL</only>
        <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::CONTROL_L, KeyCode::MINUS, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
        <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::CONTROL_L, KeyCode::MINUS, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
      </item>
    </item>
  </item>
</root>
